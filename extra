def convert_to_python_types(obj):
    """
    Recursively convert NumPy types to standard Python types
    """
    if isinstance(obj, np.integer):
        return int(obj)
    elif isinstance(obj, np.floating):
        return float(obj)
    elif isinstance(obj, np.ndarray):
        return obj.tolist()
    elif isinstance(obj, dict):
        return {k: convert_to_python_types(v) for k, v in obj.items()}
    elif isinstance(obj, list):
        return [convert_to_python_types(v) for v in obj]
    return obj

@app.route('/warehouses', methods=['GET', 'POST'])
def warehouses():
    # ... (previous code remains the same)

    # Prepare result warehouses with coordinates and sizes
    result_warehouses = []
    for warehouse_name in significant_warehouses:
        warehouse_info = warehouses_with_size[warehouses_with_size['District'] == warehouse_name].iloc[0]
        result_warehouses.append({
            'district': warehouse_name,
            'latitude': convert_to_python_types(warehouse_info['Latitude']),
            'longitude': convert_to_python_types(warehouse_info['Longitude']),
            'size_category': warehouse_info['Warehouse_Size_Category'],
            'size_sqm': convert_to_python_types(warehouse_info['Warehouse_Size_Sqm'])
        })

    return render_template(
        'warehouses.html', 
        title="Warehouses", 
        warehouses=result_warehouses, 
        show_prediction=show_prediction,
        map_key='AIzaSyBUembZbrAbmni90Rqwbd3drj5xBkRsF50'
    )